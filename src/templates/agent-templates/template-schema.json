{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Template Schema",
  "description": "Schema for validating agent template configurations",
  "type": "object",
  "required": [
    "name",
    "displayName", 
    "description",
    "version",
    "category",
    "llmType",
    "capabilities",
    "deliverables",
    "instructions"
  ],
  "properties": {
    "name": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_]*$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Unique agent name in snake_case format"
    },
    "displayName": {
      "type": "string",
      "minLength": 5,
      "maxLength": 100,
      "description": "Human-readable agent name"
    },
    "description": {
      "type": "string",
      "minLength": 20,
      "maxLength": 500,
      "description": "Brief description of agent purpose and capabilities"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version number (e.g., 1.0.0)"
    },
    "category": {
      "type": "string",
      "enum": ["research", "automation", "monitoring", "integration", "analysis", "custom"],
      "description": "Agent category for classification"
    },
    "llmType": {
      "type": "string",
      "enum": ["thinking", "fast"],
      "description": "Type of LLM to use - thinking for strategic tasks, fast for execution"
    },
    "capabilities": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z][a-z0-9_]*$"
      },
      "minItems": 1,
      "maxItems": 20,
      "uniqueItems": true,
      "description": "List of agent capabilities"
    },
    "deliverables": {
      "type": "object",
      "required": ["database", "outputs"],
      "properties": {
        "code": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Code artifacts the agent produces"
        },
        "database": {
          "type": "array",
          "items": {"type": "string"},
          "minItems": 1,
          "description": "Database entries the agent creates"
        },
        "outputs": {
          "type": "array", 
          "items": {"type": "string"},
          "minItems": 1,
          "description": "Final outputs the agent produces"
        }
      },
      "description": "What the agent delivers"
    },
    "instructions": {
      "type": "string",
      "minLength": 100,
      "maxLength": 5000,
      "description": "Detailed instructions for the agent's behavior"
    },
    "requiredPermissions": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "web_access", "file_read", "file_write", "file_execute",
          "database_read", "database_write", "system_access", 
          "network_access", "api_access", "webhook_receive",
          "notification_send", "system_read", "compute_access"
        ]
      },
      "uniqueItems": true,
      "description": "Permissions required by the agent"
    },
    "resourceRequirements": {
      "type": "object",
      "properties": {
        "memory": {
          "type": "string",
          "pattern": "^\\d+[KMGT]?B$",
          "description": "Memory requirement (e.g., 512MB, 2GB)"
        },
        "storage": {
          "type": "string", 
          "pattern": "^\\d+[KMGT]?B$",
          "description": "Storage requirement"
        },
        "networkAccess": {
          "type": "boolean",
          "description": "Whether network access is required"
        },
        "cpuPriority": {
          "type": "string",
          "enum": ["low", "normal", "high"],
          "description": "CPU priority level"
        },
        "computePower": {
          "type": "string",
          "enum": ["low", "normal", "high"],
          "description": "Computational power requirement"
        },
        "gpuAccess": {
          "type": "boolean",
          "description": "Whether GPU access is required"
        },
        "bandwidth": {
          "type": "string",
          "pattern": "^\\d+[KMG]bps$",
          "description": "Network bandwidth requirement"
        },
        "priority": {
          "type": "string",
          "enum": ["low", "normal", "high", "critical"],
          "description": "Overall priority level"
        }
      },
      "description": "Resource requirements for the agent"
    },
    "configuration": {
      "type": "object",
      "description": "Default configuration parameters for the agent",
      "additionalProperties": true
    },
    "triggers": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["type", "description"],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "scheduled", "file_event", "api_call", "webhook",
              "threshold_breach", "data_update", "keyword_query",
              "event_driven", "queue_message", "service_event",
              "manual", "request_driven", "threshold_based", "data_change"
            ]
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 200
          },
          "configuration": {
            "type": "object",
            "description": "Trigger-specific configuration"
          }
        }
      },
      "description": "Events that can trigger the agent"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["type", "name", "required"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["service", "agent", "external_api", "database"]
          },
          "name": {
            "type": "string",
            "minLength": 1
          },
          "required": {
            "type": "boolean"
          },
          "relationship": {
            "type": "string",
            "enum": ["uses", "collaborates", "reports_to", "alerts", "provides_data"]
          },
          "version": {
            "type": "string",
            "description": "Required version (if applicable)"
          }
        }
      },
      "description": "Dependencies on other agents or services"
    },
    "validation": {
      "type": "object",
      "properties": {
        "required_fields": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Fields required for agent operation"
        },
        "output_validation": {
          "type": "array", 
          "items": {"type": "string"},
          "description": "Validation rules for agent outputs"
        },
        "performance_thresholds": {
          "type": "object",
          "description": "Performance benchmarks the agent must meet"
        }
      },
      "description": "Validation rules and requirements"
    },
    "examples": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "title": {"type": "string"},
          "description": {"type": "string"},
          "input": {"type": "object"},
          "expectedOutput": {"type": "object"}
        }
      },
      "description": "Example use cases and expected outputs"
    },
    "tags": {
      "type": "array",
      "items": {"type": "string"},
      "uniqueItems": true,
      "description": "Tags for categorization and search"
    },
    "author": {
      "type": "string",
      "description": "Template author or maintainer"
    },
    "license": {
      "type": "string",
      "description": "License for the template"
    },
    "deprecated": {
      "type": "boolean",
      "default": false,
      "description": "Whether this template is deprecated"
    },
    "replacementTemplate": {
      "type": "string",
      "description": "Name of replacement template if deprecated"
    }
  },
  "additionalProperties": false
}